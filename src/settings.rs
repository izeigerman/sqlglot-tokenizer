use crate::token::TokenType;
use std::collections::{HashMap, HashSet};

#[derive(Debug)]
pub struct TokenizerSettings {
    pub white_space: HashMap<char, TokenType>,
    pub single_tokens: HashMap<char, TokenType>,
    pub keywords: HashMap<&'static str, TokenType>,
    pub numeric_literals: HashMap<&'static str, &'static str>,
    pub identifiers: HashMap<char, char>,
    pub identifier_escapes: HashSet<char>,
    pub string_escapes: HashSet<char>,
    pub quotes: HashMap<char, char>,
    pub format_strings: HashMap<&'static str, (char, TokenType)>,
    pub comments: HashMap<&'static str, Option<&'static str>>,
    pub var_single_tokens: HashSet<char>,
    pub identifiers_can_start_with_digit: bool,
}

impl TokenizerSettings {
    pub fn default() -> TokenizerSettings {
        TokenizerSettings {
            white_space: HashMap::from([
                (' ', TokenType::SPACE),
                ('\t', TokenType::SPACE),
                ('\n', TokenType::BREAK),
                ('\r', TokenType::BREAK),
            ]),
            single_tokens: HashMap::from([
                ('(', TokenType::L_PAREN),
                (')', TokenType::R_PAREN),
                ('[', TokenType::L_BRACKET),
                (']', TokenType::R_BRACKET),
                ('{', TokenType::L_BRACE),
                ('}', TokenType::R_BRACE),
                ('&', TokenType::AMP),
                ('^', TokenType::CARET),
                (':', TokenType::COLON),
                (',', TokenType::COMMA),
                ('.', TokenType::DOT),
                ('-', TokenType::DASH),
                ('=', TokenType::EQ),
                ('>', TokenType::GT),
                ('<', TokenType::LT),
                ('%', TokenType::MOD),
                ('!', TokenType::NOT),
                ('|', TokenType::PIPE),
                ('+', TokenType::PLUS),
                (';', TokenType::SEMICOLON),
                ('/', TokenType::SLASH),
                ('\\', TokenType::BACKSLASH),
                ('*', TokenType::STAR),
                ('~', TokenType::TILDA),
                ('?', TokenType::PLACEHOLDER),
                ('@', TokenType::PARAMETER),
                ('\'', TokenType::QUOTE),
                ('`', TokenType::IDENTIFIER),
                ('"', TokenType::IDENTIFIER),
                ('#', TokenType::HASH),
            ]),
            keywords: HashMap::from([
                ("{%", TokenType::BLOCK_START),
                ("{%+", TokenType::BLOCK_START),
                ("{%-", TokenType::BLOCK_START),
                ("%}", TokenType::BLOCK_END),
                ("+%}", TokenType::BLOCK_END),
                ("-%}", TokenType::BLOCK_END),
                ("{{+", TokenType::BLOCK_START),
                ("{{-", TokenType::BLOCK_START),
                ("+}}", TokenType::BLOCK_END),
                ("-}}", TokenType::BLOCK_END),
                ("/*+", TokenType::HINT),
                ("==", TokenType::EQ),
                ("::", TokenType::DCOLON),
                ("||", TokenType::DPIPE),
                (">=", TokenType::GTE),
                ("<=", TokenType::LTE),
                ("<>", TokenType::NEQ),
                ("!=", TokenType::NEQ),
                ("<=>", TokenType::NULLSAFE_EQ),
                ("->", TokenType::ARROW),
                ("->>", TokenType::DARROW),
                ("=>", TokenType::FARROW),
                ("#>", TokenType::HASH_ARROW),
                ("#>>", TokenType::DHASH_ARROW),
                ("<->", TokenType::LR_ARROW),
                ("&&", TokenType::DAMP),
                ("??", TokenType::DQMARK),
                ("ALL", TokenType::ALL),
                ("ALWAYS", TokenType::ALWAYS),
                ("AND", TokenType::AND),
                ("ANTI", TokenType::ANTI),
                ("ANY", TokenType::ANY),
                ("ASC", TokenType::ASC),
                ("AS", TokenType::ALIAS),
                ("ASOF", TokenType::ASOF),
                ("AUTOINCREMENT", TokenType::AUTO_INCREMENT),
                ("AUTO_INCREMENT", TokenType::AUTO_INCREMENT),
                ("BEGIN", TokenType::BEGIN),
                ("BETWEEN", TokenType::BETWEEN),
                ("CACHE", TokenType::CACHE),
                ("UNCACHE", TokenType::UNCACHE),
                ("CASE", TokenType::CASE),
                ("CHARACTER SET", TokenType::CHARACTER_SET),
                ("CLUSTER BY", TokenType::CLUSTER_BY),
                ("COLLATE", TokenType::COLLATE),
                ("COLUMN", TokenType::COLUMN),
                ("COMMIT", TokenType::COMMIT),
                ("CONNECT BY", TokenType::CONNECT_BY),
                ("CONSTRAINT", TokenType::CONSTRAINT),
                ("CREATE", TokenType::CREATE),
                ("CROSS", TokenType::CROSS),
                ("CUBE", TokenType::CUBE),
                ("CURRENT_DATE", TokenType::CURRENT_DATE),
                ("CURRENT_TIME", TokenType::CURRENT_TIME),
                ("CURRENT_TIMESTAMP", TokenType::CURRENT_TIMESTAMP),
                ("CURRENT_USER", TokenType::CURRENT_USER),
                ("DATABASE", TokenType::DATABASE),
                ("DEFAULT", TokenType::DEFAULT),
                ("DELETE", TokenType::DELETE),
                ("DESC", TokenType::DESC),
                ("DESCRIBE", TokenType::DESCRIBE),
                ("DISTINCT", TokenType::DISTINCT),
                ("DISTRIBUTE BY", TokenType::DISTRIBUTE_BY),
                ("DIV", TokenType::DIV),
                ("DROP", TokenType::DROP),
                ("ELSE", TokenType::ELSE),
                ("END", TokenType::END),
                ("ESCAPE", TokenType::ESCAPE),
                ("EXCEPT", TokenType::EXCEPT),
                ("EXECUTE", TokenType::EXECUTE),
                ("EXISTS", TokenType::EXISTS),
                ("FALSE", TokenType::FALSE),
                ("FETCH", TokenType::FETCH),
                ("FILTER", TokenType::FILTER),
                ("FIRST", TokenType::FIRST),
                ("FULL", TokenType::FULL),
                ("FUNCTION", TokenType::FUNCTION),
                ("FOR", TokenType::FOR),
                ("FOREIGN KEY", TokenType::FOREIGN_KEY),
                ("FORMAT", TokenType::FORMAT),
                ("FROM", TokenType::FROM),
                ("GEOGRAPHY", TokenType::GEOGRAPHY),
                ("GEOMETRY", TokenType::GEOMETRY),
                ("GLOB", TokenType::GLOB),
                ("GROUP BY", TokenType::GROUP_BY),
                ("GROUPING SETS", TokenType::GROUPING_SETS),
                ("HAVING", TokenType::HAVING),
                ("ILIKE", TokenType::ILIKE),
                ("IN", TokenType::IN),
                ("INDEX", TokenType::INDEX),
                ("INET", TokenType::INET),
                ("INNER", TokenType::INNER),
                ("INSERT", TokenType::INSERT),
                ("INTERVAL", TokenType::INTERVAL),
                ("INTERSECT", TokenType::INTERSECT),
                ("INTO", TokenType::INTO),
                ("IS", TokenType::IS),
                ("ISNULL", TokenType::ISNULL),
                ("JOIN", TokenType::JOIN),
                ("KEEP", TokenType::KEEP),
                ("KILL", TokenType::KILL),
                ("LATERAL", TokenType::LATERAL),
                ("LEFT", TokenType::LEFT),
                ("LIKE", TokenType::LIKE),
                ("LIMIT", TokenType::LIMIT),
                ("LOAD", TokenType::LOAD),
                ("LOCK", TokenType::LOCK),
                ("MERGE", TokenType::MERGE),
                ("NATURAL", TokenType::NATURAL),
                ("NEXT", TokenType::NEXT),
                ("NOT", TokenType::NOT),
                ("NOTNULL", TokenType::NOTNULL),
                ("NULL", TokenType::NULL),
                ("OBJECT", TokenType::OBJECT),
                ("OFFSET", TokenType::OFFSET),
                ("ON", TokenType::ON),
                ("OR", TokenType::OR),
                ("XOR", TokenType::XOR),
                ("ORDER BY", TokenType::ORDER_BY),
                ("ORDINALITY", TokenType::ORDINALITY),
                ("OUTER", TokenType::OUTER),
                ("OVER", TokenType::OVER),
                ("OVERLAPS", TokenType::OVERLAPS),
                ("OVERWRITE", TokenType::OVERWRITE),
                ("PARTITION", TokenType::PARTITION),
                ("PARTITION BY", TokenType::PARTITION_BY),
                ("PARTITIONED BY", TokenType::PARTITION_BY),
                ("PARTITIONED_BY", TokenType::PARTITION_BY),
                ("PERCENT", TokenType::PERCENT),
                ("PIVOT", TokenType::PIVOT),
                ("PRAGMA", TokenType::PRAGMA),
                ("PRIMARY KEY", TokenType::PRIMARY_KEY),
                ("PROCEDURE", TokenType::PROCEDURE),
                ("QUALIFY", TokenType::QUALIFY),
                ("RANGE", TokenType::RANGE),
                ("RECURSIVE", TokenType::RECURSIVE),
                ("REGEXP", TokenType::RLIKE),
                ("REPLACE", TokenType::REPLACE),
                ("RETURNING", TokenType::RETURNING),
                ("REFERENCES", TokenType::REFERENCES),
                ("RIGHT", TokenType::RIGHT),
                ("RLIKE", TokenType::RLIKE),
                ("ROLLBACK", TokenType::ROLLBACK),
                ("ROLLUP", TokenType::ROLLUP),
                ("ROW", TokenType::ROW),
                ("ROWS", TokenType::ROWS),
                ("SCHEMA", TokenType::SCHEMA),
                ("SELECT", TokenType::SELECT),
                ("SEMI", TokenType::SEMI),
                ("SET", TokenType::SET),
                ("SETTINGS", TokenType::SETTINGS),
                ("SHOW", TokenType::SHOW),
                ("SIMILAR TO", TokenType::SIMILAR_TO),
                ("SOME", TokenType::SOME),
                ("SORT BY", TokenType::SORT_BY),
                ("START WITH", TokenType::START_WITH),
                ("TABLE", TokenType::TABLE),
                ("TABLESAMPLE", TokenType::TABLE_SAMPLE),
                ("TEMP", TokenType::TEMPORARY),
                ("TEMPORARY", TokenType::TEMPORARY),
                ("THEN", TokenType::THEN),
                ("TRUE", TokenType::TRUE),
                ("UNION", TokenType::UNION),
                ("UNKNOWN", TokenType::UNKNOWN),
                ("UNNEST", TokenType::UNNEST),
                ("UNPIVOT", TokenType::UNPIVOT),
                ("UPDATE", TokenType::UPDATE),
                ("USE", TokenType::USE),
                ("USING", TokenType::USING),
                ("UUID", TokenType::UUID),
                ("VALUES", TokenType::VALUES),
                ("VIEW", TokenType::VIEW),
                ("VOLATILE", TokenType::VOLATILE),
                ("WHEN", TokenType::WHEN),
                ("WHERE", TokenType::WHERE),
                ("WINDOW", TokenType::WINDOW),
                ("WITH", TokenType::WITH),
                ("APPLY", TokenType::APPLY),
                ("ARRAY", TokenType::ARRAY),
                ("BIT", TokenType::BIT),
                ("BOOL", TokenType::BOOLEAN),
                ("BOOLEAN", TokenType::BOOLEAN),
                ("BYTE", TokenType::TINYINT),
                ("MEDIUMINT", TokenType::MEDIUMINT),
                ("TINYINT", TokenType::TINYINT),
                ("SHORT", TokenType::SMALLINT),
                ("SMALLINT", TokenType::SMALLINT),
                ("INT128", TokenType::INT128),
                ("INT2", TokenType::SMALLINT),
                ("INTEGER", TokenType::INT),
                ("INT", TokenType::INT),
                ("INT4", TokenType::INT),
                ("LONG", TokenType::BIGINT),
                ("BIGINT", TokenType::BIGINT),
                ("INT8", TokenType::BIGINT),
                ("DEC", TokenType::DECIMAL),
                ("DECIMAL", TokenType::DECIMAL),
                ("BIGDECIMAL", TokenType::BIGDECIMAL),
                ("BIGNUMERIC", TokenType::BIGDECIMAL),
                ("MAP", TokenType::MAP),
                ("NULLABLE", TokenType::NULLABLE),
                ("NUMBER", TokenType::DECIMAL),
                ("NUMERIC", TokenType::DECIMAL),
                ("FIXED", TokenType::DECIMAL),
                ("REAL", TokenType::FLOAT),
                ("FLOAT", TokenType::FLOAT),
                ("FLOAT4", TokenType::FLOAT),
                ("FLOAT8", TokenType::DOUBLE),
                ("DOUBLE", TokenType::DOUBLE),
                ("DOUBLE PRECISION", TokenType::DOUBLE),
                ("JSON", TokenType::JSON),
                ("CHAR", TokenType::CHAR),
                ("CHARACTER", TokenType::CHAR),
                ("NCHAR", TokenType::NCHAR),
                ("VARCHAR", TokenType::VARCHAR),
                ("VARCHAR2", TokenType::VARCHAR),
                ("NVARCHAR", TokenType::NVARCHAR),
                ("NVARCHAR2", TokenType::NVARCHAR),
                ("STR", TokenType::TEXT),
                ("STRING", TokenType::TEXT),
                ("TEXT", TokenType::TEXT),
                ("LONGTEXT", TokenType::LONGTEXT),
                ("MEDIUMTEXT", TokenType::MEDIUMTEXT),
                ("TINYTEXT", TokenType::TINYTEXT),
                ("CLOB", TokenType::TEXT),
                ("LONGVARCHAR", TokenType::TEXT),
                ("BINARY", TokenType::BINARY),
                ("BLOB", TokenType::VARBINARY),
                ("LONGBLOB", TokenType::LONGBLOB),
                ("MEDIUMBLOB", TokenType::MEDIUMBLOB),
                ("TINYBLOB", TokenType::TINYBLOB),
                ("BYTEA", TokenType::VARBINARY),
                ("VARBINARY", TokenType::VARBINARY),
                ("TIME", TokenType::TIME),
                ("TIMETZ", TokenType::TIMETZ),
                ("TIMESTAMP", TokenType::TIMESTAMP),
                ("TIMESTAMPTZ", TokenType::TIMESTAMPTZ),
                ("TIMESTAMPLTZ", TokenType::TIMESTAMPLTZ),
                ("DATE", TokenType::DATE),
                ("DATETIME", TokenType::DATETIME),
                ("INT4RANGE", TokenType::INT4RANGE),
                ("INT4MULTIRANGE", TokenType::INT4MULTIRANGE),
                ("INT8RANGE", TokenType::INT8RANGE),
                ("INT8MULTIRANGE", TokenType::INT8MULTIRANGE),
                ("NUMRANGE", TokenType::NUMRANGE),
                ("NUMMULTIRANGE", TokenType::NUMMULTIRANGE),
                ("TSRANGE", TokenType::TSRANGE),
                ("TSMULTIRANGE", TokenType::TSMULTIRANGE),
                ("TSTZRANGE", TokenType::TSTZRANGE),
                ("TSTZMULTIRANGE", TokenType::TSTZMULTIRANGE),
                ("DATERANGE", TokenType::DATERANGE),
                ("DATEMULTIRANGE", TokenType::DATEMULTIRANGE),
                ("UNIQUE", TokenType::UNIQUE),
                ("STRUCT", TokenType::STRUCT),
                ("VARIANT", TokenType::VARIANT),
                ("ALTER", TokenType::ALTER),
                ("ANALYZE", TokenType::COMMAND),
                ("CALL", TokenType::COMMAND),
                ("COMMENT", TokenType::COMMENT),
                ("COPY", TokenType::COMMAND),
                ("EXPLAIN", TokenType::COMMAND),
                ("GRANT", TokenType::COMMAND),
                ("OPTIMIZE", TokenType::COMMAND),
                ("PREPARE", TokenType::COMMAND),
                ("TRUNCATE", TokenType::COMMAND),
                ("VACUUM", TokenType::COMMAND),
                ("USER-DEFINED", TokenType::USERDEFINED),
                ("FOR VERSION", TokenType::VERSION_SNAPSHOT),
                ("FOR TIMESTAMP", TokenType::TIMESTAMP_SNAPSHOT),
            ]),
            numeric_literals: HashMap::new(),
            identifiers: HashMap::from([('"', '"')]),
            identifier_escapes: HashSet::from(['"']),
            string_escapes: HashSet::from(['\'']),
            quotes: HashMap::new(),         // FIXME: add quotes
            format_strings: HashMap::new(), // FIXME: add format strings
            comments: HashMap::new(),       // FIXME: add comments
            var_single_tokens: HashSet::new(),
            identifiers_can_start_with_digit: false,
        }
    }
}
